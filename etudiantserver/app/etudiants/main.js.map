{"version":3,"sources":["./src/app/student-view/student-view.component.html","./src/app/student-view/student-view.component.ts","./src/app/tchat/tchat.component.html","./src/app/tchat/tchat.component.ts","./src/app/students/students.component.html","./src/app/students/students.component.ts","./src/environments/environment.ts","./src/app/single-student/single-student.component.ts","./src/app/single-student/single-student.component.html","./src/app/four-oh-four/four-oh-four.component.ts","./src/app/four-oh-four/four-oh-four.component.html","./src/app/services/student.service.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.component.ts","./src/app/services/auth-guard.service.ts","./src/app/services/http.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/user.model.ts","./src/app/user-list/user-list.component.html","./src/app/user-list/user-list.component.ts","./src/app/app.module.ts","./src/app/services/web-socket.service.ts","./src/app/edit-student/edit-student.component.ts","./src/app/edit-student/edit-student.component.html","./src/app/services/auth.service.ts","./src/app/new-user/new-user.component.ts","./src/app/new-user/new-user.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n    <div class=\"col-xs-12\">\n        <ul class=\"list-group\">\n            <app-students *ngFor=\"let student of students; let i = index\" \n                [index]=\"i\" \n                [studentName]=\"student.name\" \n                [studentStatus]=\"student.status\" \n                [id]=\"student.id\" >\n            </app-students>\n        </ul>\n        \n        <button class=\"btn btn-success\"\n            [disabled]=\"isAuth\" \n            (click)=\"allPresent()\">Tous Présents\n        </button>\n  \n        <button class=\"btn btn-danger\"\n            [disabled]=\"isAuth\"\n            (click)=\"allAbsent()\">Tous Absent\n        </button>\n    \n    </div>\n ","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {StudentService} from 'src/app/services/student.service';\nimport {Subscription} from'rxjs/Subscription';\n@Component({\n  selector: 'app-student-view',\n  templateUrl: './student-view.component.html',\n  styleUrls: ['./student-view.component.scss']\n})\nexport class StudentViewComponent implements OnInit,OnDestroy {\n  isAuth:boolean = false;\n  lastUpdate = new Promise((resolve, reject) => { const date = new Date(); setTimeout(() => {resolve(date);}, 3000);});\n  students:any =[];\n  studentSubscription!:Subscription;\n\n  constructor(private studentService:StudentService) { }\n  \n  allAbsent(){\n    if(confirm('Etes-vous sûr qu\\'ils sont tous absents?')){\n      return this.studentService.switchOffAll();\n    }else{\n      return null;\n    }\n  }\n\n  allPresent(){\n    alert('ils sont tous là!');\n    return this.studentService.switchOnAll(); \n  }\n  ngOnInit(){\n    //this.students = this.studentService.students;\n    this.studentSubscription = this.studentService.studentsSubject.subscribe(\n    (students: any[]) => {\n    this.students = students;\n    }\n    );\n    this.studentService.emitStudentSubject();\n    \n  }\n  ngOnDestroy(){\n    this.studentSubscription.unsubscribe();\n  }\n}\n","    <h2 style=\"color: antiquewhite ; font-weight:900\">Tchat</h2>\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\" *ngFor=\"let message of srvMessage\">\n                {{ message }}\n            </li>\n            <li>\n                <input type=\"text\" class=\"from-control\" placeholder=\"ecrivez votre message ici!\" [(ngModel)]=\"messageToSend\"> \n                <button class=\"btn btn-success\" (click)=\"onSend()\"> Envoyer </button>\n            </li>\n        </ul>\n        \n        \n\n    ","import { Component, Input, OnInit } from '@angular/core';\nimport {WebSocketService} from 'src/app/services/web-socket.service';\n\n@Component({\n  selector: 'app-tchat',\n  templateUrl: './tchat.component.html',\n  styleUrls: ['./tchat.component.scss']\n})\nexport class TchatComponent implements OnInit {\n\n  srvMessage: string[] = [];\n  //pour stocker les messages.\n  webSocket!: WebSocket;\n  //l’objet webSocket qui gère la connexion et les échanges avec le serveur\n  serverUrl = 'ws://localhost:8085';\n  // l’adresse du serveur webSocket de type ws et non http\n  @Input() messageToSend!: string;\n  // L’input du message à envoyer.\n\n  constructor(private wsService:WebSocketService) {\n    \n    this.wsService.createObservableSocket(this.serverUrl).subscribe(data => {\n      this.srvMessage.push(data);\n      }); \n    }\n\n   onSend() {\n    this.wsService.sendMessage(this.messageToSend) ;\n    this.messageToSend = '';\n    }\n   \n  \n  ngOnInit(): void {\n  }\n\n}\n","<li [ngClass]=\"{'list-group-item': true,\n    'list-group-item-success': studentStatus === 'present',\n    'list-group-item-danger': studentStatus === 'absent'}\">\n    \n    <div style=\"width:20px;height:20px;background-color:rgb(255, 0, 0);\" *ngIf=\"studentStatus === 'absent(e)'\"></div>       \n    <h4 [ngStyle]= \"{color:getColor()}\"> étudiant : {{ studentName }} --Statut:{{ getStatus() }}</h4>\n    <a [routerLink]=\"[id]\" class=\"btn btn-sm btn-primary\">Détail  </a>\n    <button class=\"btn btn-sm btn-success\" *ngIf=\"studentStatus === 'absent'\" (click)=\"onSwitch()\">Présent</button>\n    <button class=\"btn btn-sm btn-danger\" *ngIf=\"studentStatus === 'present'\" (click)=\"onSwitch()\">Absent </button>   \n</li>","import { Component,Input, OnInit } from '@angular/core';\nimport {StudentService} from 'src/app/services/student.service';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.scss']\n})\nexport class StudentsComponent implements OnInit {\n  \n  @Input()studentName: string = 'henri';\n  @Input()studentStatus: string = 'present';\n  @Input()index!: number;\n  @Input()id!:number;\n  \n  constructor(private studentService:StudentService) {\n   }\n   getColor(){\n    if(this.studentStatus === 'present'){\n      return 'green';\n    \n    }else{\n      return 'red';\n    }                                                                                                \n  }\n   getStatus() {\n    return this.studentStatus;\n    }\n  ngOnInit(): void {\n  }\n  onSwitch(){\n    if(this.studentStatus ==='present'){\n      this.studentService.switchOffOne(this.index);\n    }else if(this.studentStatus==='absent'){\n      this.studentService.switchOnOne(this.index);\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {StudentService} from '../services/student.service'\nimport {ActivatedRoute} from '@angular/router'\n\n@Component({\n  selector: 'app-single-student',\n  templateUrl: './single-student.component.html',\n  styleUrls: ['./single-student.component.scss']\n})\nexport class SingleStudentComponent implements OnInit {\n  \n  name: String = 'etudiant';\n  status : String = 'status';\n  \n  constructor(private studentService: StudentService, private route:ActivatedRoute) { }\n\n\n  ngOnInit() {\n    const id = this.route.snapshot.params['id'];\n    this.name = this.studentService.getStudentById(+id).name;\n    this.status = this.studentService.getStudentById(+id).status;\n  }\n\n\n}\n","<h2 style=\"color:white\">{{name}}</h2>\n<p style=\"color:white\">Statut: {{status}}</p>\n<a routerLink=\"/students\" class=\"btn btn-sm btn-success\">Retour à la liste</a> \n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-four-oh-four',\n  templateUrl: './four-oh-four.component.html',\n  styleUrls: ['./four-oh-four.component.scss']\n})\nexport class FourOhFourComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Erreur 404</h2>\n<p>La page que vous cherchez n'existe pas !</p>","import {Subject} from 'rxjs/Subject';\r\n\r\nexport class StudentService{\r\n\r\n  studentsSubject = new Subject<any[]>();\r\n\r\n    private students =[\r\n        {\r\n          id: 1,\r\n          name:'Henri',\r\n          status: 'present'\r\n        },\r\n        {\r\n          id: 2,\r\n          name:'Louis',\r\n          status:'absent'\r\n        },\r\n        {\r\n          id: 3,\r\n          name:'Philippe',\r\n          status:'present'\r\n        }\r\n      ];\r\n      constructor(  ){}\r\n\r\n      switchOnAll(){\r\n          for(let student of this.students){\r\n              student.status = 'present';\r\n          } \r\n          this.emitStudentSubject;\r\n      }\r\n      switchOffAll(){\r\n          for(let student of this.students){\r\n              student.status ='absent';\r\n              this.emitStudentSubject;\r\n          }\r\n          \r\n      }\r\n      switchOnOne(i:number){\r\n          this.students[i].status='present';\r\n          this.emitStudentSubject;\r\n      }\r\n      switchOffOne(i:number){\r\n          this.students[i].status='absent';\r\n          this.emitStudentSubject;\r\n      }\r\n      getStudentById(id:number):any{              // on a ajouter any \r\n        const student =this.students.find(\r\n          (s)=>{\r\n            return s.id === id;\r\n          }\r\n        );\r\n        return student;\r\n      }  \r\n      \r\n      emitStudentSubject() {\r\n        this.studentsSubject.next(this.students.slice());\r\n       }\r\n       \r\n       addStudent(name: string, status: string) {\r\n        const studentObject = {\r\n        id: 0,\r\n        name: '',\r\n        status: ''\r\n        };\r\n        studentObject.name = name;\r\n        studentObject.status = status;\r\n        studentObject.id = this.students[(this.students.length - 1)].id + 1;\r\n        this.students.push(studentObject);\r\n        this.emitStudentSubject();\r\n       }\r\n       \r\n}","\n<h2 style=\"color: antiquewhite; font-weight:900\">Authentification</h2>\n<button class=\"btn btn-sm btn-success\" *ngIf = \"!authStatus\"(click)=\"onSignIn()\">se connecter</button>\n<button class=\"btn btn-sm btn-danger\"  *ngIf = \"authStatus \" (click)=\"onSignOut()\">se déconnecter</button>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {AuthService} from 'src/app/services/auth.service'\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  authStatus!:boolean;\n  constructor(private authservice:AuthService, private router:Router) { }\n  \n  \n  ngOnInit(): void {\n    this.authStatus = this.authservice.isAuth;\n  }\n  onSignIn(){\n      this.authservice.signIn().then(()=>{alert('sign in successful!'); \n      this.authStatus = this.authservice.isAuth;\n      this.router.navigate(['students']);})\n  }\n  onSignOut(){\n    this.authservice.signOut();\n    this.authStatus =this.authservice.isAuth;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {AuthService} from 'src/app/services/auth.service';\r\nimport {Router} from '@angular/router';\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n\r\n    constructor(private authService:AuthService, private router : Router){}\r\n\r\n    canActivate(\r\n route: ActivatedRouteSnapshot,\r\n state: RouterStateSnapshot):  Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n    if(this.authService.isAuth) {\r\n        return true;\r\n      } else {\r\n        return this.router.navigate(['/auth']);\r\n      }\r\n\r\n }\r\n\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\nimport {User} from '../models/user.model'\r\n\r\n\r\n@Injectable({providedIn : 'root'})\r\nexport class HttpService {\r\n    private serverUrl = 'http://localhost:8080/';\r\n    constructor (private http: HttpClient) { }\r\n \r\n    public getUsers(): Observable<any>{\r\n        return this.http.get(this.serverUrl+'users') ;\r\n    }\r\n\r\n    private httpOptions = {\r\n        headers: new HttpHeaders ({\r\n        'Content-Type': 'application/json'\r\n        })\r\n       }\r\n\r\n    public createUser(user:User): Observable<User> {\r\n        return this.http.post<User>(this.serverUrl+'users', user, this.httpOptions);\r\n       }    \r\n       \r\n    public suppUser(firstName:string): Observable<any> {\r\n        return this.http.delete<any>(this.serverUrl+'users/'+ firstName, {observe: 'response'});\r\n        }\r\n       \r\n}","import { Component,Input,OnInit } from '@angular/core';\nimport {StudentService} from './services/student.service';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/Subscription';\nimport { Subscription } from 'rxjs/Subscription';\nimport {OnDestroy} from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit,OnDestroy {\n  \n  title = 'etudiants';\n  isAuth:boolean = false;\n  secondes!:number;  \n  counterSubscription!:Subscription;\n  \n  \n  constructor(){\n  \n    setTimeout(\n      () => {\n      this.isAuth = true;\n    },4000);\n  }\n  \n  // rajouter à l'exterieur du constructeur \n  ngOnInit(){\n    const counter = Observable.interval(1000);\n    this.counterSubscription = counter.subscribe(\n      (value) => {\n      this.secondes = value;\n      },\n      (error) => {\n      console.log('An error occured ! : ' + error);\n      },\n      () => {\n      console.log('Observable complete!');\n      }\n    \n      ); \n          \n  }\n  ngOnDestroy() {\n    this.counterSubscription.unsubscribe();\n   }\n   \n\n\n\n\n}\n\n","<!DOCTYPE html>\r\n\r\n      \r\n<div class=\"col-xs-12\" > \r\n    <router-outlet>\r\n        <nav class=\"navbar navbar-inverse\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"navbar-collapse\">\r\n                    <ul class=\"nav navbar-nav\">  \r\n                        <li><a routerLink=\"auth\">Authentification</a></li>\r\n                        <li routerLinkActive =\"active\"><a routerLink=\"students\">Etudiants</a></li>\r\n                        <li routerLinkActive=\"active\"><a routerLink=\"edit\">Nouvel étudiant</a></li>\r\n                        <li routerLinkActive=\"active\"><a routerLink=\"users\">Utilisateurs</a></li>   \r\n                    </ul>\r\n                    <div class=\"navbar-right\">\r\n                        <p style=\"color: antiquewhite; font-style:italic\">Vous êtes connecté depuis {{ secondes }} secondes !</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    </router-outlet>\r\n</div>\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-8\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n        <div class=\"col-xs-4\">\r\n            <app-tchat></app-tchat>\r\n        </div>\r\n    </div>\r\n</div>\r\n","export class User {\r\n    constructor(\r\n    public firstName: string,\r\n    public lastName: string,\r\n    public email: string,\r\n    public diploma: string,\r\n    public options : any[]\r\n    ) {}\r\n   }\r\n   ","<a routerLink=\"/new-user\"class=\"btn btn-sm btn-success\">Nouvel utilisateur</a>\n<ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let user of users\">\n        <h3>{{ user.firstName }} {{ user.lastName }}</h3>\n        <p>{{ user.email }}</p>\n        <p>Cet étudiant est en {{ user.diploma }}</p>\n        <p *ngIf=\"user.options && user.options.length > 0\">\n            Il a pris les options suivantes :\n            <span *ngFor=\"let option of user.options\">{{ option }} - </span>\n        </p>\n        <button class=\"btn btn-sm btn-danger\"(click)=\"onSuppress(user.firstName)\">Supprimer</button>\n    </li>\n</ul>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { User } from 'src/app/models/user.model';\nimport { Subscription} from 'rxjs/Subscription';\nimport {HttpService} from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit, OnDestroy {\n\n  users !: User [] ;\n  userSubscription !: Subscription ;\n\n  constructor( private http:HttpService) { }\n\n  ngOnInit(): void {\n      this.userSubscription = this.http.getUsers().subscribe(\n        (users: User[]) => {\n        this.users = users;\n        }\n        );\n  } \n\n  ngOnDestroy(){\n    this.userSubscription.unsubscribe();\n  }\n\n  onSuppress(firstName:string) {\n    if(confirm('Etes-vous sûr de la supprimer ?')) {\n      this.suppressUser(firstName);\n    } else {\n      null;\n    }\n    }\n  \n  suppressUser(firstName:string) {\n    this.http.suppUser(firstName).subscribe((result)=>{\n    if(result.status === 200) {\n    this.ngOnInit();\n    } else {\n    alert('le User n\\'existe pas !');\n    }\n    })\n    }\n   \n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule, routedComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StudentsComponent } from './students/students.component';\nimport { StudentService}  from './services/student.service';\nimport { AuthService} from './services/auth.service';\nimport { AuthGuardService} from './services/auth-guard.service';\nimport {ReactiveFormsModule } from '@angular/forms' ;\nimport {HttpClientModule} from '@angular/common/http'\nimport {WebSocketService} from 'src/app/services/web-socket.service';\nimport { TchatComponent } from './tchat/tchat.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    StudentsComponent,\n    routedComponents,\n    TchatComponent\n  ],\n\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n\n\n  ],\n\n  providers: [\n    StudentService,\n    AuthService,\n    AuthGuardService,\n    WebSocketService,\n\n  ],\n\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Observable } from 'rxjs/Observable';\r\n\r\nexport class WebSocketService {\r\n webSocket!: WebSocket;\r\n constructor () {}\r\n \r\n public createObservableSocket(url:string):Observable<string>{\r\n this.webSocket = new WebSocket(url);\r\n return new Observable(result => {\r\n this.webSocket.onmessage = (message) => result.next(message.data);\r\n this.webSocket.onerror = (message) => result.error(message);\r\n this.webSocket.onclose = (message) => result.complete();\r\n })\r\n }\r\n public sendMessage (message: any) {\r\n this.webSocket.send(message);\r\n }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {FormsModule} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport{StudentService} from 'src/app/services/student.service';\n\n\n@Component({\n  selector: 'app-edit-student',\n  templateUrl: './edit-student.component.html',\n  styleUrls: ['./edit-student.component.scss']\n})\nexport class EditStudentComponent implements OnInit {\n  defaultStatus = 'absent';\n  constructor(private router:Router,private studentService:StudentService) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(form: NgForm) {\n    const name = form.value['name'];\n    const status = form.value['status'];\n    this.studentService.addStudent(name,status);\n    this.router.navigate(['/students']);\n   }\n   \n   \n}\n","<div class=\"row\">\n    <div class=\"col-sm-8 col-sm-offset-2\">\n        <form (ngSubmit)=\"onSubmit(formStudent)\" #formStudent=\"ngForm\">\n            <div class=\"form-group\">\n                <label for=\"name\" style=\"color: antiquewhite; font-weight:900\">\n                    Nom de l'étudiant\n                </label>\n                <input type=\"text\" id=\"name\" value= \"type your name\"class=\"form-control\" name=\"name\" placeholder=\"Entrez le nom de l'etudiants!\" ngModel required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"status\" style=\"color: antiquewhite; font-weight:900\">\n                    État de l'étudiant\n                </label>\n                <select id=\"status\" class=\"form-control\" name=\"status\" [ngModel] = \"defaultStatus\">\n                    <option value=\"present\">present</option>\n                    <option value=\"absent\">absent</option>\n                </select>\n            </div>\n            <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"formStudent.invalid\">Enregistrer</button> \n        </form>\n    </div>\n</div>","export class AuthService{\r\n    isAuth = false;\r\n\r\n    signIn(){\r\n        return new Promise((resolve,reject)=>{setTimeout(()=>{this.isAuth=true;resolve(true);},3000);});\r\n    }\r\n    signOut(){\r\n        this.isAuth = false;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators,FormArray} from '@angular/forms';\nimport { Router} from '@angular/router';\nimport { User } from '../models/user.model';\nimport {HttpService} from '../services/http.service';\n\n@Component({\n  selector: 'app-new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.scss']\n})\nexport class NewUserComponent implements OnInit {\n\n  userForm !: FormGroup ;\n\n  constructor(private formBuilder: FormBuilder,  \n              private router : Router,\n              private httpService:HttpService) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      diploma: ['', Validators.required],\n      options: this.formBuilder.array([])\n   });\n  }\n\n   onSubmitForm() {\n    const formValue = this.userForm.value;\n    const newUser = new User( \n      formValue['firstName'],\n      formValue['lastName'],\n      formValue['email'],\n      formValue['diploma'],\n      formValue['options'] ? formValue['options'] : []\n       );\n    \n    \n    this.httpService.createUser(newUser).subscribe((response)=>{\n      if(response && response.firstName === 'ok'){\n        alert('User crée');\n      } else {\n        alert('User Existe !');\n      };\n     }, (e) => {\n     console.log('erreur',e);\n     }, ()=>{\n      this.router.navigate(['/users']);\n     }\n     );\n     \n    }\n   \n    getOptions(): FormArray {\n      return this.userForm.get('options') as FormArray;\n     }\n    onAddOption() {\n      const newOptionControl = this.formBuilder.control(null, Validators.required);\n      this.getOptions().push(newOptionControl);\n     }\n     \n\n}\n","<div class=\"col-sm-8 col-sm-offset-2\">\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmitForm()\">\n        <div class=\"form-group\">\n            <label for=\"firstName\" style=\"color:white\">Prénom</label>\n            <input type=\"text\" id=\"firstName\" class=\"form-control\" formControlName=\"firstName\" placeholder= \" entrer votre prénom!\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"lastName\" style=\"color:white\">Nom</label>\n            <input type=\"text\" id=\"lastName\" class=\"form-control\" formControlName=\"lastName\" placeholder=\" entrer votre nom!\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\" style=\"color:white\">Adresse e-mail</label>\n            <input type=\"text\" id=\"email\" class=\"form-control\" formControlName=\"email\" placeholder=\" entrer votre e-mail !\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"diploma\" style=\"color:white\">Diplome</label>\n            <input id=\"diploma\" class=\"form-control\" formControlName=\"diploma\" placeholder=\" entrer votre diplome !\">\n        </div>\n        <div formArrayName=\"options\" style=\"color:white\">\n            <h3>Vos options</h3>\n            <div class=\"form-group\" *ngFor=\"let optionControl of getOptions().controls; let i = index\">\n                <input type=\"text\" class=\"form-control\" [formControlName]=\"i\" placeholder=\" ajouter une option !\">\n            </div>\n        </div>\n        <ul>\n            <li>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"onAddOption()\"> Ajouter une option</button>\n            </li>  \n            <li>  \n                <button type=\"submit\" class=\"btn btn-primary pull-right\" [disabled]=\"userForm.invalid\">Valider</button>\n            </li>\n        </ul>\n    </form>\n</div>\n\n  ","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {Routes} from '@angular/router';\nimport { AuthComponent} from 'src/app/auth/auth.component';\nimport {StudentViewComponent} from 'src/app/student-view/student-view.component';\nimport { SingleStudentComponent} from 'src/app/single-student/single-student.component';\nimport {FourOhFourComponent} from 'src/app/four-oh-four/four-oh-four.component';\nimport {AuthGuardService} from 'src/app/services/auth-guard.service';\nimport {EditStudentComponent} from 'src/app/edit-student/edit-student.component';\nimport {UserListComponent} from 'src/app/user-list/user-list.component';\nimport {NewUserComponent } from './new-user/new-user.component';\n\n\nconst appRoutes: Routes = [\n\n  { path: '', pathMatch: 'full', redirectTo: 'auth' },\n  { path: 'students', canActivate: [AuthGuardService],component: StudentViewComponent },\n  { path: 'students/:id',canActivate: [AuthGuardService],component:SingleStudentComponent},\n  { path: 'auth', component: AuthComponent },\n  { path: 'edit', canActivate: [AuthGuardService], component: EditStudentComponent},\n  { path: 'users',canActivate: [AuthGuardService], component: UserListComponent },\n  { path: 'new-user', component: NewUserComponent },\n\n  { path: 'not-found', component: FourOhFourComponent },\n  { path: '**', redirectTo: 'not-found' },\n ];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n\n\nexport const routedComponents = [ StudentViewComponent, AuthComponent,FourOhFourComponent,EditStudentComponent,UserListComponent,NewUserComponent];\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}